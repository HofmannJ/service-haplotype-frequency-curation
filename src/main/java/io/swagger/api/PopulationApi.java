/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Error;
import io.swagger.model.PopulationData;
import io.swagger.model.PopulationRequest;
import io.swagger.model.PopulationResponse;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-09T15:23:31.951-06:00")

@Api(value = "population", description = "the population API")
public interface PopulationApi {

    @ApiOperation(value = "Create Population", notes = "", response = PopulationData.class, tags={ "Population API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PopulationData.class),
        @ApiResponse(code = 201, message = "Created", response = Void.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/population",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<PopulationData> createPopulation(@ApiParam(value = "Population Request" ,required=true )  @Valid @RequestBody PopulationRequest populationRequest) {
        // do some magic!
        return new ResponseEntity<PopulationData>(HttpStatus.OK);
    }


    @ApiOperation(value = "Get a list of all populations", notes = "", response = PopulationResponse.class, tags={ "Population API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful response", response = PopulationResponse.class),
        @ApiResponse(code = 500, message = "An unexpected error ocurred", response = Error.class) })
    
    @RequestMapping(value = "/population",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<PopulationResponse> getAllPopulations() {
        // do some magic!
        return new ResponseEntity<PopulationResponse>(HttpStatus.OK);
    }


    @ApiOperation(value = "Get Population Given an Id", notes = "", response = PopulationData.class, tags={ "Population API", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = PopulationData.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Void.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/population/{populationId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<PopulationData> getPopulationForId(@ApiParam(value = "Population ID",required=true ) @PathVariable("populationId") Long populationId) {
        // do some magic!
        return new ResponseEntity<PopulationData>(HttpStatus.OK);
    }

}
